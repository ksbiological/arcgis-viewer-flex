<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
// Created by Chen Juequan(chenjuequan@gmail.com) on August 2, 2010
//
// This widget is created to mimic the MapProgressBar in ArcGIS Server Silverlight
// Api.It has not strictly tested and can now only be used in ArcGIS Viewer 2.0. 
// I am sure this widget is not good enough,if you got any better idea on this, 
// please keep me posted. Thank you.
// 
////////////////////////////////////////////////////////////////////////////////
-->
<viewer:BaseWidget xmlns:fx			="http://ns.adobe.com/mxml/2009" 
				   xmlns:s			="library://ns.adobe.com/flex/spark" 
				   xmlns:mx			="library://ns.adobe.com/flex/mx" 
				   xmlns:viewer		="com.esri.viewer.*"
				   creationComplete ="basewidget_creationCompleteHandler(event)" 
				   >
	<fx:Script>
		<![CDATA[
			import com.esri.ags.Map;
			import com.esri.ags.events.ExtentEvent;
			import com.esri.ags.events.LayerEvent;
			import com.esri.ags.events.MapEvent;
			import com.esri.ags.events.PanEvent;
			import com.esri.ags.layers.Layer;
			import com.esri.viewer.ViewerContainer;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			/*This colletion is used to maintain layers that are currently
			 *been loading from Server or been rendering at the client side
			*/
			private var layerColl:ArrayCollection;

			protected function basewidget_creationCompleteHandler(event:FlexEvent):void
			{
				//Initialize the layer collection
				layerColl = new ArrayCollection();
				bindEvents();
			}
			
			private function bindEvents():void
			{
				//Obtain map component from ViewerContainer
				var map:Map = ViewerContainer.getInstance().mapManager.map;
				//If the map already has layers loaded, we should add event
				//listeners to these layers
				for each(var layerId:String in map.layerIds)
				{
					var lyr:Layer = map.getLayer(layerId);
					if (lyr)
					{
						lyr.addEventListener(LayerEvent.UPDATE_START, layerUpdateStartHandler);
						lyr.addEventListener(LayerEvent.UPDATE_END, layerUpdateEndHandler);
					}
				}
				map.addEventListener(ExtentEvent.EXTENT_CHANGE, mapExtentChangeHandler);
				map.addEventListener(PanEvent.PAN_START, mapPanStartHandler);
				map.addEventListener(MapEvent.LAYER_ADD, mapLayerAddHandler);
				map.addEventListener(MapEvent.LAYER_REMOVE, mapLayerRemoveHandler);
			}
			
			//The extent change event will fire layer update event,
			//I add listener to this event to show the progressbar immediately
			//when user zoom in/out the map or change map's extent
			protected function mapExtentChangeHandler(event:ExtentEvent):void
			{
				pb.visible = true;
			}
			
			protected function mapPanStartHandler(event:PanEvent):void
			{
				pb.visible = true;
			}
			
			protected function mapLayerAddHandler(event:MapEvent):void
			{
				var lyr:Layer = event.layer;
				lyr.addEventListener(LayerEvent.UPDATE_START, layerUpdateStartHandler);
				lyr.addEventListener(LayerEvent.UPDATE_END, layerUpdateEndHandler);
			}
			
			protected function mapLayerRemoveHandler(event:MapEvent):void
			{
				//when one layer is removed from map, also remove it from
				//the layer collection
				var lyr:Layer = event.layer;
				if (layerColl.contains(lyr))
				{
					layerColl.removeItemAt(layerColl.getItemIndex(lyr));
				}
				//when there's no layer in layer collection
				//progressbar should be hidden
				pb.visible = !layerColl.length == 0;
			}
			
			protected function layerUpdateStartHandler(event:LayerEvent):void
			{
				//once a layer starts to update,show the progressbar
				pb.visible = true;
				var lyr:Layer = event.layer;
				//add the layer to layer collection
				if (!layerColl.contains(lyr))
				{
					layerColl.addItem(lyr);
				}
			}
			
			protected function layerUpdateEndHandler(event:LayerEvent):void
			{
				var lyr:Layer = event.layer;
				//once a layer finished its update,remove the layer from layer collection
				if (layerColl.contains(lyr))
				{
					layerColl.removeItemAt(layerColl.getItemIndex(lyr));
				}
				//all layers finished their loading and rendering,hide the progress
				pb.visible = !layerColl.length == 0;
			}

		]]>
	</fx:Script>
	
	<mx:ProgressBar id="pb"
					visible="false"
					indeterminate="true" 
					width="180" 
					labelPlacement="center"
				    label="Loading map..."
					/>
	
</viewer:BaseWidget>
